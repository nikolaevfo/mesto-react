[{"D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\index.js":"1","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\reportWebVitals.js":"2","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\App.js":"3","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\Main.js":"4","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\Header.js":"5","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\Footer.js":"6","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\PopupWithForm.js":"7","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\ImagePopup.js":"8","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\Card.js":"9","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\utils\\api.js":"10","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\contexts\\CurrentUserContext.js":"11","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\EditProfilePopup.js":"12","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\EditAvatarPopup.js":"13","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\AddPlacePopup.js":"14"},{"size":511,"mtime":1612151857863,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":5175,"mtime":1613196206221,"results":"18","hashOfConfig":"16"},{"size":1475,"mtime":1613196789171,"results":"19","hashOfConfig":"16"},{"size":243,"mtime":1612151845089,"results":"20","hashOfConfig":"16"},{"size":194,"mtime":1612153094841,"results":"21","hashOfConfig":"16"},{"size":939,"mtime":1613186175325,"results":"22","hashOfConfig":"16"},{"size":567,"mtime":1613110528633,"results":"23","hashOfConfig":"16"},{"size":1682,"mtime":1613112135424,"results":"24","hashOfConfig":"16"},{"size":2067,"mtime":1613195051081,"results":"25","hashOfConfig":"16"},{"size":88,"mtime":1613103198986,"results":"26","hashOfConfig":"16"},{"size":1954,"mtime":1613186329332,"results":"27","hashOfConfig":"16"},{"size":1286,"mtime":1613196333659,"results":"28","hashOfConfig":"16"},{"size":1617,"mtime":1613197906722,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1cbbol4",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\index.js",[],["61","62"],"D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\reportWebVitals.js",[],"D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\App.js",["63"],"import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport api from '../utils/api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\n\r\nfunction App() {\r\n\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState('');\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    api.getUserInfo()\r\n      .then((userData) => {\r\n      setCurrentUser(userData); \r\n    })\r\n    .catch((err) => console.log(\"Ошибка при загрузке данных\", err));\r\n  }, [])\r\n\r\n\r\n  // popaps opening and closing\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard(false);\r\n  }\r\n\r\n  // profile\r\n  function handleUpdateUser(userData) {    \r\n    api.setUserInfo(userData)\r\n      .then((newUserData) => {         \r\n        setCurrentUser(newUserData);\r\n        closeAllPopups();\r\n      })\r\n  }\r\n\r\n  // avatar\r\n  function handleUpdateAvatar(avatarObj) {\r\n    api.setUserAvatar(avatarObj.avatar)\r\n      .then((userData) => {\r\n        setCurrentUser(userData); \r\n        closeAllPopups();\r\n    })\r\n  }\r\n\r\n  // cards\r\n  React.useEffect(() => {\r\n    api.getCardList()\r\n      .then((initialCards) => {\r\n        setCards(initialCards);\r\n      })\r\n      .catch((err) => console.log(\"Ошибка при загрузке данных\", err));\r\n  }, []);\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api.changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      });\r\n  } \r\n\r\n  function handleCardDelete(card) {\r\n    const cardId = card._id\r\n    api.deleteCard(card._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((c) => c._id !== cardId);\r\n        setCards(newCards); \r\n      })\r\n  }\r\n\r\n  // card\r\n  function handleAddPlaceSubmit(card) {\r\n    api.addCard(card)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]); \r\n        closeAllPopups();\r\n    })\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"root\">\r\n\r\n        <div className=\"page\">\r\n          <Header />\r\n          <Main\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            handleCardClick={handleCardClick}\r\n            cards={cards}\r\n            onCardLike={handleCardLike} \r\n            onCardDelete={handleCardDelete}\r\n          />\r\n          <Footer />\r\n        </div>\r\n        \r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        /> \r\n\r\n        {/* <PopupWithForm\r\n          name='card'\r\n          title='Новое место'\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          children={\r\n            <>\r\n              <input type=\"text\" name=\"popupInputPlace\" placeholder=\"Название\"\r\n                className=\"popup-card__text popup__text popup-card__text_type_place popup__input\" id=\"card-place\" required\r\n                minLength=\"2\" maxLength=\"30\" />\r\n              <span id=\"card-place-error\" className=\"popup__text-error\"></span>\r\n              <input type=\"url\" name=\"popupInputLink\" placeholder=\"Ссылка на картинку\"\r\n                className=\"popup-card__text popup__text popup-card__text_type_link popup__input\" id=\"card-link\" required />\r\n              <span id=\"card-link-error\" className=\"popup__text-error\"></span>\r\n            </>\r\n          }\r\n        /> */}\r\n\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n\r\n        <ImagePopup\r\n          card={selectedCard}\r\n          onClose={closeAllPopups}\r\n        />\r\n\r\n      </div >\r\n    </CurrentUserContext.Provider>    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\Main.js",["64"],"import React from 'react';\r\nimport api from '../utils/api';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n  \r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n\r\n      <section className=\"profile\">\r\n        <div className=\"profile__avatar-container\" onClick={props.onEditAvatar}>\r\n          <div className=\"profile__avatar\" style={{ backgroundImage: `url(${currentUser.avatar})` }}></div>\r\n          <div className=\"profile__avatar-bg\"></div>\r\n        </div>\r\n        <div className=\"profile__info\">\r\n          <div className=\"profile__info-row\">\r\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n            <button type=\"button\" className=\"profile__edit-button button\" onClick={props.onEditProfile}></button>\r\n          </div>\r\n          <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n        </div>\r\n        <button type=\"button\" className=\"profile__add-button button\" onClick={props.onAddPlace}></button>\r\n      </section>\r\n\r\n      <section className=\"elements\">\r\n        {props.cards.map((item) => (\r\n          <Card\r\n            key={item._id}\r\n            card={item}\r\n            onCardClick={props.handleCardClick}\r\n            onCardLike={props.onCardLike}\r\n            onCardDelete={props.onCardDelete}\r\n          />\r\n        ))}\r\n      </section>\r\n\r\n    </main >\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\Header.js",[],"D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\Footer.js",[],"D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\PopupWithForm.js",[],"D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\ImagePopup.js",[],"D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\Card.js",[],"D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\utils\\api.js",[],"D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\contexts\\CurrentUserContext.js",[],"D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\EditProfilePopup.js",[],"D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\EditAvatarPopup.js",[],"D:\\Федя\\программирование\\Practicum\\Веб_разработчик\\спринт_10 mesto-react\\mesto-react\\src\\components\\AddPlacePopup.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":21},{"ruleId":"69","severity":1,"message":"73","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":11},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'PopupWithForm' is defined but never used.","Identifier","unusedVar","'api' is defined but never used.","no-global-assign","no-unsafe-negation"]